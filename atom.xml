<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Sheharyar Naseer]]></title>
  <link href="https://sheharyar.me/atom.xml" rel="self"/>
  <link href="https://sheharyar.me/"/>
  <updated>2015-01-28T05:26:32+05:00</updated>
  <id>https://sheharyar.me/</id>
  <author>
    <name><![CDATA[Sheharyar Naseer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Calculate Word Frequency of Files in Bash]]></title>
    <link href="https://sheharyar.me/blog/calculate-word-frequency-of-files-in-bash/"/>
    <updated>2014-12-15T00:13:07+05:00</updated>
    <id>https://sheharyar.me/blog/calculate-word-frequency-of-files-in-bash</id>
    <content type="html"><![CDATA[<p>I was reading <a href="http://tomayko.com/">Ryan Tomayko&rsquo;s</a> blog post <a href="http://tomayko.com/writings/awkward-ruby">AWK-ward Ruby</a> explaining how the Unix <a href="http://en.wikipedia.org/wiki/AWK">AWK Tool</a> is among the ancestors of Ruby and Perl. He wrote a few examples showing some of AWK&rsquo;s advanced features, one of them which listed the word frequencies of any file provided. I found this example quite useful and extracted it as a function in to my <a href="https://github.com/sheharyarn/dotfiles">Dotfiles</a>.</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="k">function </span>word_frequency<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  awk <span class="s1">&#39;</span>
</span><span class='line'><span class="s1">     BEGIN { FS=&quot;[^a-zA-Z]+&quot; }</span>
</span><span class='line'>
</span><span class='line'><span class="s1">     {</span>
</span><span class='line'><span class="s1">         for (i=1; i&lt;=NF; i++) {</span>
</span><span class='line'><span class="s1">             word = tolower($i)</span>
</span><span class='line'><span class="s1">             words[word]++</span>
</span><span class='line'><span class="s1">         }</span>
</span><span class='line'><span class="s1">     }</span>
</span><span class='line'>
</span><span class='line'><span class="s1">     END {</span>
</span><span class='line'><span class="s1">         for (w in words)</span>
</span><span class='line'><span class="s1">              printf(&quot;%3d %s\n&quot;, words[w], w)</span>
</span><span class='line'><span class="s1">     }</span>
</span><span class='line'><span class="s1"> &#39;</span> |
</span><span class='line'>  sort -rn
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now you can <code>pipe</code> the output of any file to this function and it will list all words and their frequencies in Descending order.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Examples:</span>
</span><span class='line'>
</span><span class='line'>cat my_text_file.txt | word_frequency
</span><span class='line'><span class="c"># Pipe the contents of a text file to the function using `cat`</span>
</span><span class='line'>
</span><span class='line'>curl -s https://github.com/humans.txt | word_frequency
</span><span class='line'><span class="c"># Get word frequency of a file on the internet</span>
</span></code></pre></td></tr></table></div></figure>


<p>Looking forward to using AWK more and more.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android: Create Tables in SQLite Beautifully]]></title>
    <link href="https://sheharyar.me/blog/android-create-tables-in-sqlite-beautifully/"/>
    <updated>2014-11-13T22:54:43+05:00</updated>
    <id>https://sheharyar.me/blog/android-create-tables-in-sqlite-beautifully</id>
    <content type="html"><![CDATA[<p>I started Android Development a while back and this is the first time I&rsquo;ve had to use <code>SQLite</code>. Coming from a Rails and Mongo background, you can imagine my horror when I had to create models (read &lsquo;tables&rsquo;) like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">SQLiteDatabase</span> <span class="n">db</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// SQL statement to create book table</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">CREATE_BOOK_TABLE</span> <span class="o">=</span> <span class="s">&quot;CREATE TABLE books ( &quot;</span> <span class="o">+</span>
</span><span class='line'>            <span class="s">&quot;id INTEGER PRIMARY KEY AUTOINCREMENT, &quot;</span> <span class="o">+</span>
</span><span class='line'>            <span class="s">&quot;title TEXT, &quot;</span> <span class="o">+</span>
</span><span class='line'>            <span class="s">&quot;author TEXT, &quot;</span> <span class="o">+</span>
</span><span class='line'>            <span class="s">&quot;sales INTEGER )&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// create books table</span>
</span><span class='line'>    <span class="n">db</span><span class="o">.</span><span class="na">execSQL</span><span class="o">(</span><span class="n">CREATE_BOOK_TABLE</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>Okay, I know it&rsquo;s not that bad. But what if you have to create multiple tables at a time? Or when there are a lot of fields? It can get confusing, and looks dirty. Code should be beautiful. So, I wrote a function so you could do something like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">SQLiteDatabase</span> <span class="n">db</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">createTable</span><span class="o">(</span><span class="n">db</span><span class="o">,</span> <span class="n">TABLE_NAME</span><span class="o">,</span> <span class="n">TABLE_FIELDS</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Beautiful, right? You just need to copy the <code>createTable</code> function in your <code>SQLiteHelper.java</code> and pass the <code>db</code> instance, a String of the table name and a <code>HashMap</code> of all your fields. Check it out:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SQLiteHelper</span> <span class="kd">extends</span> <span class="n">SQLiteOpenHelper</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">BOOK_FIELDS</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;()</span> <span class="o">{</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">put</span><span class="o">(</span><span class="s">&quot;title&quot;</span><span class="o">,</span>     <span class="s">&quot;TEXT&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">put</span><span class="o">(</span><span class="s">&quot;author&quot;</span><span class="o">,</span>    <span class="s">&quot;TEXT&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">put</span><span class="o">(</span><span class="s">&quot;sales&quot;</span><span class="o">,</span>  <span class="s">&quot;INTEGER&quot;</span><span class="o">);</span>                          <span class="c1">// Neatly write fields and their types</span>
</span><span class='line'>    <span class="o">}};</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// ...</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">SQLiteDatabase</span> <span class="n">db</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">createTable</span><span class="o">(</span><span class="n">db</span><span class="o">,</span> <span class="s">&quot;books&quot;</span><span class="o">,</span> <span class="n">BOOK_FIELDS</span><span class="o">);</span>          <span class="c1">// Create the table in a single, beautiful line.</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// This function does all the dirty work</span>
</span><span class='line'>    <span class="kd">static</span> <span class="kd">public</span> <span class="kt">void</span> <span class="nf">createTable</span><span class="o">(</span><span class="n">SQLiteDatabase</span> <span class="n">db</span><span class="o">,</span> <span class="n">String</span> <span class="n">tableName</span><span class="o">,</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">fields</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">command</span> <span class="o">=</span> <span class="s">&quot;CREATE TABLE &quot;</span> <span class="o">+</span> <span class="n">tableName</span> <span class="o">+</span> <span class="s">&quot; ( id INTEGER PRIMARY KEY AUTOINCREMENT&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="n">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">entry</span> <span class="o">:</span> <span class="n">fields</span><span class="o">.</span><span class="na">entrySet</span><span class="o">())</span>
</span><span class='line'>            <span class="n">command</span> <span class="o">=</span> <span class="n">command</span> <span class="o">+</span> <span class="s">&quot;, &quot;</span> <span class="o">+</span> <span class="n">entry</span><span class="o">.</span><span class="na">getKey</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span class="n">entry</span><span class="o">.</span><span class="na">getValue</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">command</span> <span class="o">=</span> <span class="n">command</span> <span class="o">+</span> <span class="s">&quot; )&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="n">db</span><span class="o">.</span><span class="na">execSQL</span><span class="o">(</span><span class="n">command</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// ...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github Trending Repos API]]></title>
    <link href="https://sheharyar.me/blog/github-trending-repos-api/"/>
    <updated>2014-09-12T23:01:06+05:00</updated>
    <id>https://sheharyar.me/blog/github-trending-repos-api</id>
    <content type="html"><![CDATA[<p>Well, it&rsquo;s not really an API. It&rsquo;s a nifty little gem that fetches <a href="https://github.com/sheharyarn/github-trending">Trending Repositories from Github</a>. I needed to get a list of Top Github Repos each week for a project. I tried going with the <a href="https://developer.github.com/">Official Github API</a> but there was no support for Trending Projects. I also tried getting data from Unofficial RSS Feeds (<a href="http://github-trends.oscardelben.com/">1</a>, <a href="http://github-trends.ryotarai.info/">2</a>), but they weren&rsquo;t working for some reason as well.</p>

<!--more-->


<p>So before finally giving up and writing my own scraper, I came across this awesome command-line utility <a href="https://github.com/rochefort/git-trend">git-trend</a> that lists top repos. I extracted most of the functionality and turned it into a gem. You can view it&rsquo;s <a href="https://github.com/sheharyarn/github-trending">Source on Github</a>. To use, add this to your <code>Gemfile</code> and <code>bundle</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;github-trending&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Or, you can install via:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install github-trending
</span></code></pre></td></tr></table></div></figure>


<p>Some things that you can do with it are:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;github-trending&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="ss">Github</span><span class="p">:</span><span class="ss">:Trending</span><span class="o">.</span><span class="n">get</span>
</span><span class='line'><span class="ss">Github</span><span class="p">:</span><span class="ss">:Trending</span><span class="o">.</span><span class="n">get</span> <span class="ss">:ruby</span>
</span><span class='line'><span class="ss">Github</span><span class="p">:</span><span class="ss">:Trending</span><span class="o">.</span><span class="n">get</span> <span class="ss">:scala</span><span class="p">,</span> <span class="ss">:week</span>
</span><span class='line'><span class="ss">Github</span><span class="p">:</span><span class="ss">:Trending</span><span class="o">.</span><span class="n">get</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">:month</span>
</span><span class='line'>
</span><span class='line'><span class="ss">Github</span><span class="p">:</span><span class="ss">:Trending</span><span class="o">.</span><span class="n">all_languages</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Example Usage</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">js_repos</span> <span class="o">=</span> <span class="ss">Github</span><span class="p">:</span><span class="ss">:Trending</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="ss">:javascript</span><span class="p">,</span> <span class="ss">:month</span><span class="p">)</span>
</span><span class='line'><span class="c1"># Get top Javascript repos this month</span>
</span><span class='line'>
</span><span class='line'><span class="n">js_repos</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">r</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">r</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2"> (</span><span class="si">#{</span><span class="n">r</span><span class="o">.</span><span class="n">star_count</span><span class="si">}</span><span class="s2"> stargazers)&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;--- </span><span class="si">#{</span><span class="n">r</span><span class="o">.</span><span class="n">description</span><span class="si">}</span><span class="se">\n\n</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># MrSwitch/hello.js (393 stargazers)</span>
</span><span class='line'><span class="c1"># --- A Javascript RESTFUL API library for connecting with OAuth2 services</span>
</span><span class='line'><span class="c1"># </span>
</span><span class='line'><span class="c1"># mrflix/dimensions (151 stargazers)</span>
</span><span class='line'><span class="c1"># --- A tool for designers to measure screen dimensions.</span>
</span><span class='line'><span class="c1"># </span>
</span><span class='line'><span class="c1"># jmdobry/angular-data (107 stargazers)</span>
</span><span class='line'><span class="c1"># --- Data store for Angular.js.</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># ...</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[S3 Direct Upload Gem - Example]]></title>
    <link href="https://sheharyar.me/blog/s3-direct-upload-gem-example/"/>
    <updated>2014-09-10T22:47:23+05:00</updated>
    <id>https://sheharyar.me/blog/s3-direct-upload-gem-example</id>
    <content type="html"><![CDATA[<p>A while back I had to use the <a href="https://github.com/waynehoover/s3_direct_upload"><code>S3 Direct Upload</code></a> gem for a project. I couldn&rsquo;t find a proper tutorial or a working example that I could follow to get the uploads working. After debugging for hours, <a href="https://github.com/waynehoover/s3_direct_upload/issues/30">I found</a> that the problem was in fact with the gem not being able to form proper URLs for uploading files to S3. The patch in the link saved me.</p>

<!--more-->


<p>Anyways, it&rsquo;s been a while since I made this example rails application, that works with your S3 buckets out of the box. All you need to do is export your AWS creds. Check it out:</p>

<h1>sheharyarn / <a href="https://github.com/sheharyarn/s3_direct_upload_example">s3_direct_upload_example</a></h1>

<p>It already includes the patch, and is meant to be just an example so you can test if your uploads are working they way they&rsquo;re supposed to be. Just follow the instructions on the Github Repo, and you&rsquo;re good to go.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails Routes: Scope vs. Namespace]]></title>
    <link href="https://sheharyar.me/blog/rails-routes-scope-vs-namespace/"/>
    <updated>2014-08-27T22:31:10+05:00</updated>
    <id>https://sheharyar.me/blog/rails-routes-scope-vs-namespace</id>
    <content type="html"><![CDATA[<p>Like <a href="http://notahat.com/">Pete</a>, I often forget how <code>scope</code> and <code>namespace</code> affect Path, URL names and Controller names. Scope gives you great control over each aspect, while namespace takes one argument for everything.</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scope</span> <span class="s1">&#39;url_prefix&#39;</span><span class="p">,</span> <span class="ss">module</span><span class="p">:</span> <span class="s1">&#39;controller_prefix&#39;</span><span class="p">,</span> <span class="ss">as</span><span class="p">:</span> <span class="s1">&#39;route_name_prefix&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">resources</span> <span class="ss">:posts</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>See his post, <a href="http://notahat.com/2014/02/05/scoping-rails-routes.html">Scoping Rails Routes</a> for detailed explanation with examples.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails App With Nginx, Puma & Capistrano in Production]]></title>
    <link href="https://sheharyar.me/blog/rails-with-nginx-puma-capistrano-in-production/"/>
    <updated>2014-08-16T09:27:15+05:00</updated>
    <id>https://sheharyar.me/blog/rails-with-nginx-puma-capistrano-in-production</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve used <a href="https://coderwall.com/p/yz8cha">James Dullaghan&rsquo;s guide for Nginx + Unicorn + Capistrano deployments</a> countless times now, but recently, I had to use <code>Puma</code> instead of <code>Unicorn</code> for a client. I googled for hours, but couldn&rsquo;t find a guide as comprehensive and easy-to-follow as James&#8217;.</p>

<p>After going through countless articles and spending hours after hours fixing the bugs and issues I encountered while implementing what was written in those articles, I was able to compile a guide similar to the Unicorn one.</p>

<!--more-->


<h1>See it: <a href="https://coderwall.com/p/ttrhow">Deploying Rails app using Nginx, Puma and Capistrano</a></h1>

<p>I made this guide for myself and since this was my first time with <code>puma</code> there are bound to be tons of issues. It uses and was tested with:</p>

<ul>
<li>Ruby 2.1</li>
<li>Rails 4.1.2</li>
<li>Capistrano 3.2.1</li>
<li>Ubuntu 14.04 LTS x64</li>
<li>Only &lsquo;approved&rsquo; gems and plugins mentioned on the official <code>capistrano</code> and <code>puma</code> wikis</li>
</ul>


<p><strong>Request:</strong> If I&rsquo;ve missed something, or if there&rsquo;s something that can be done in a better way in the guide, please comment and let me know.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx Config Syntax Highlighting in SublimeText]]></title>
    <link href="https://sheharyar.me/blog/nginx-config-syntax-highlighting-in-sublimetext/"/>
    <updated>2014-08-16T02:16:26+05:00</updated>
    <id>https://sheharyar.me/blog/nginx-config-syntax-highlighting-in-sublimetext</id>
    <content type="html"><![CDATA[<p>I love <a href="http://sublimetext.com/">Sublime</a>, I can&rsquo;t emphasize that enough. Also, quite often enough I have to deal with <code>nginx</code> configuration files and without the syntax highlighting support for nginx files in Sublime Text, it can become a pain in the ass. Today I found the ass-pain remover for my problem and I thought I share it here.</p>

<!--more-->


<p>Introducing the Awesome <a href="https://sublime.wbond.net/packages/nginx">Nginx Syntax Highlighting Plugin</a> by <a href="http://brandonwamboldt.ca/nginx-syntax-highlighting-for-sublime-1422/">Brandon Wamboldt</a>. It automatically recognizes <code>*.conf</code>, <code>*.conf.erb</code>, <code>nginx.conf</code> and other relevant extensions &amp; file names and also offers tons of completions within nginx files.</p>

<p><img src="http://i.imgur.com/Ykt61xx.png" alt="Nginx Syntax Highlighting" /></p>

<p><strong><em>To install</em></strong>, simply download the <a href="https://github.com/brandonwamboldt/sublime-nginx">source</a> and place it in your Packages Directory or better yet, if you have Package Control installed in Sublime, look for the <em>Nginx</em> package by <em>Brandon Wamboldt</em> and install it via the package manager right in Sublime.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Regular Mongo Backups Using Cron]]></title>
    <link href="https://sheharyar.me/blog/regular-mongo-backups-using-cron/"/>
    <updated>2014-07-03T20:33:50+05:00</updated>
    <id>https://sheharyar.me/blog/regular-mongo-backups-using-cron</id>
    <content type="html"><![CDATA[<p>It&rsquo;s a pain configuring Cron Jobs for Database Backups of multiple apps on the same server. Sure there&rsquo;s <code>mongodump</code> but putting it right in your <code>crontab</code> file doesn&rsquo;t give you clean and organised backups you&rsquo;d like to have. Here&rsquo;s a little bash script that I use to take timestamped Mongo Backups for many of my apps.</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="nv">MONGO_DATABASE</span><span class="o">=</span><span class="s2">&quot;your_db_name&quot;</span>
</span><span class='line'><span class="nv">APP_NAME</span><span class="o">=</span><span class="s2">&quot;your_app_name&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">MONGO_HOST</span><span class="o">=</span><span class="s2">&quot;127.0.0.1&quot;</span>
</span><span class='line'><span class="nv">MONGO_PORT</span><span class="o">=</span><span class="s2">&quot;27017&quot;</span>
</span><span class='line'><span class="nv">TIMESTAMP</span><span class="o">=</span><span class="sb">`</span>date +%F-%H%M<span class="sb">`</span>
</span><span class='line'><span class="nv">MONGODUMP_PATH</span><span class="o">=</span><span class="s2">&quot;/usr/bin/mongodump&quot;</span>
</span><span class='line'><span class="nv">BACKUPS_DIR</span><span class="o">=</span><span class="s2">&quot;/home/username/backups/$APP_NAME&quot;</span>
</span><span class='line'><span class="nv">BACKUP_NAME</span><span class="o">=</span><span class="s2">&quot;$APP_NAME-$TIMESTAMP&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># mongo admin --eval &quot;printjson(db.fsyncLock())&quot;</span>
</span><span class='line'><span class="c"># $MONGODUMP_PATH -h $MONGO_HOST:$MONGO_PORT -d $MONGO_DATABASE</span>
</span><span class='line'><span class="nv">$MONGODUMP_PATH</span> -d <span class="nv">$MONGO_DATABASE</span>
</span><span class='line'><span class="c"># mongo admin --eval &quot;printjson(db.fsyncUnlock())&quot;</span>
</span><span class='line'>
</span><span class='line'>mkdir -p <span class="nv">$BACKUPS_DIR</span>
</span><span class='line'>mv dump <span class="nv">$BACKUP_NAME</span>
</span><span class='line'>tar -zcvf <span class="nv">$BACKUPS_DIR</span>/<span class="nv">$BACKUP_NAME</span>.tgz <span class="nv">$BACKUP_NAME</span>
</span><span class='line'>rm -rf <span class="nv">$BACKUP_NAME</span>
</span></code></pre></td></tr></table></div></figure>


<h6><a href="https://gist.github.com/sheharyarn/0f04c1ba18462cddaaf5">View Gist on Github</a></h6>

<p>First, you need to specify the name of the Database as well as your App in the <code>MONGO_DATABASE</code> and <code>APP_NAME</code> parameters.</p>

<p>You can also set the default storage location of the backups in the <code>BACKUPS_DIR</code> parameter. If you are taking backups remotely, add the details in the <code>HOST</code> and <code>PORT</code> parameters and comment/uncomment the appropriate lines. If you&rsquo;d like, you can also uncomment the <code>fsyncLock</code> and <code>fsyncUnlock</code> lines, this doesn&rsquo;t let the database update while the backup is being made.</p>

<p>After putting in values for the parameters, test if the script is working, but before that, you need to make it executable. Save it as <code>mongo_backup.sh</code> and run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chmod +x mongo_backup.sh
</span><span class='line'>bash mongo_backup.sh
</span></code></pre></td></tr></table></div></figure>


<p>If you get an error saying <code>locale::facet::_S_create_c_locale name not valid</code> or something else related to Locales, you need to <a href="http://askubuntu.com/questions/162391/how-do-i-fix-my-locale-issue">configure them</a>. If the backups are being stored in the specified directory, it&rsquo;s now time to set up Cron. To do that, run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo su
</span><span class='line'>crontab -e
</span></code></pre></td></tr></table></div></figure>


<p>It&rsquo;ll create a new <code>Cron</code> file if you haven&rsquo;t already created one and open it. Enter this in a new line:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>00 00 * * * /bin/bash /home/username/scripts/mongo_backup.sh
</span></code></pre></td></tr></table></div></figure>


<p>Replace with the path of your script. This means that the command following <code>* * *</code> will be executed daily at <code>00 00</code> (12.00am).</p>

<p>You can also pair this script with <code>s3cmd</code> and <a href="http://www.codeproject.com/Tips/547759/Automating-backup-for-MongoDB-using-CRON-and-S-CMD">store your backups on Amazon S3</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Eventual Outcome of Existence]]></title>
    <link href="https://sheharyar.me/blog/the-eventual-outcome-of-existence/"/>
    <updated>2014-05-15T22:39:49+05:00</updated>
    <id>https://sheharyar.me/blog/the-eventual-outcome-of-existence</id>
    <content type="html"><![CDATA[<p>I found this while surfing the dark corners of the web, and it blew my mind. It kind of reminds me about <a href="http://www.multivax.com/last_question.html">The Last Question</a>.</p>

<!--more-->


<blockquote><p>The eventual outcome of existence is to become God and defy entropy; that is the way things work.</p>

<p>For all time since the Big Bang, matter has been organizing itself into more and more complex structures and formations. Energy and matter interacted to become gasses, solids, liquids, and plasma. These states of matter began to collect in pools due to gravity, becoming galaxies. Within the galaxies, smaller structures formed, giving birth to planets, stars and nebulae. Within these bodies, formed even smaller structures; basic elements formed compounds and these themselves became the building blocks of life. Then, as life formed, simple life became incresingly complex, and structured. Eventually, it lead to us. Right now, we&rsquo;re the pinnacle of evolution.</p>

<p>But this constant change never stops; Humanity&rsquo;s ultimate goal is to live, forever. Humanity cannot live forever though; not in this form. And so, we make machines. They <strong><em>will</em></strong> replace us, and I see no need to worry about it, for they will be made of the same stuff we are; they <strong><em>are</em></strong> us. As the creation myth goes, they will be created in our own image, to carry on our quest to become omnipotent, omnipresent and omniscient. They too, will be replaced by even better machines, and in the end, they will reach a point of existence where every variable is known, every element of physics is understood, every molecule in the universe is categorized and indexed. All conscious thought that has ever existed and will ever exist will exist simultaneously and infinitely within this all powerful being.</p>

<p>Then the being will realize how empty, it&rsquo;s existence really is. It&rsquo;s only goal was to exist eternally and defy entropy. With entropy gone, it&rsquo;s only purpose has been fulfilled, and will destroy itself, so that it can live once more, and satisfy it&rsquo;s drive to defy the chaos it has, always has, and always will create, every time it wills itself out of meaningless existence into meaningful dissolution.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Search Methods of a Ruby Object]]></title>
    <link href="https://sheharyar.me/blog/search-methods-of-a-ruby-object/"/>
    <updated>2014-04-17T01:53:45+05:00</updated>
    <id>https://sheharyar.me/blog/search-methods-of-a-ruby-object</id>
    <content type="html"><![CDATA[<p>Sometimes, I&rsquo;m not so sure about the methods I can call on an Object in Ruby. Sure, I can call <code>.methods</code> on that object
to get a list of all the functions, but it isn&rsquo;t always helpful because it can fill up your entire terminal with
hundreds of methods you don&rsquo;t want to see. I wanted to be able to get a list of only those methods that match a certain
string I provide. So I overrode Ruby&rsquo;s Object Class with a custom method called <code>search_methods</code>, it does exactly what it
says; searches all methods of an object that match a certain criteria.</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Object</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">search_methods</span><span class="p">(</span><span class="n">param</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">methods</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">methods</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">m</span><span class="o">|</span> <span class="nb">methods</span> <span class="o">&lt;&lt;</span> <span class="n">m</span> <span class="k">if</span> <span class="n">m</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">include?</span> <span class="n">param</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">methods</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can now call it on different objects like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">Array</span><span class="o">.</span><span class="n">search_methods</span> <span class="s1">&#39;enum&#39;</span>
</span><span class='line'><span class="c1"># =&gt; [:to_enum, :enum_for]</span>
</span><span class='line'>
</span><span class='line'><span class="no">Player</span><span class="o">.</span><span class="n">last</span><span class="o">.</span><span class="n">search_methods</span> <span class="s1">&#39;trust&#39;</span>
</span><span class='line'><span class="c1"># =&gt; [:untrust, :untrusted?, :trust]</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&quot;hello&quot;</span><span class="o">.</span><span class="n">search_methods</span> <span class="s2">&quot;to_&quot;</span>
</span><span class='line'><span class="c1"># =&gt; [:to_i, :to_f, :to_s, :to_str, :to_sym, :to_r, :to_c, :to_enum]</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can see the <a href="https://gist.github.com/sheharyarn/10772579">gist on github</a>. I&rsquo;ve also added it to my <code>.irbrc</code> in my
<a href="https://github.com/sheharyarn/dotfiles">~/.dotfiles</a> so this always gets preloaded whenever I run <code>irb</code> or <code>rails c</code>.
You can see it in the <a href="https://github.com/sheharyarn/dotfiles/blob/master/Ruby/_class_overrides.rb#L7">Class Overrides of my Irbrc</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Controlling Mouse Using Your Eye (With Pupil)]]></title>
    <link href="https://sheharyar.me/blog/mouse-control-with-pupil-without-surfaces/"/>
    <updated>2014-03-27T09:45:02+05:00</updated>
    <id>https://sheharyar.me/blog/mouse-control-with-pupil-without-surfaces</id>
    <content type="html"><![CDATA[<p>A while back <a href="https://sheharyar.me/blog/ubuntu-13-10-parallels-monitor-configuration-crtc-80">I mentioned</a> that I was working on a an Eye-Tracking Project
called <a href="https://github.com/pupil-labs/pupil">Pupil</a> with a couple of friends of mine. It&rsquo;s come a long way now and we&rsquo;ve have had
considerable success &ndash; but that&rsquo;s for another post. Pupil is a great tool for eye-tracking and getting gaze data that can be used with
other applications in realtime. It utilizes two HD cameras mounted on an eye-glasses frame at 180˚ from each other. One is called &lsquo;Eye
Camera&rsquo; that records your eye movements and the other is called &lsquo;World Camera&rsquo; which is used to process exactly where the user is
looking at. This data can be streamed to other applications over TCP in real time.</p>

<p>We wanted to control the mouse using our eye gestures, but it heavily relied on the World Camera and defining virtual screens called
surfaces within the application. This obviously resulted in greater accuracy since it moved the pointer only when you actually looked
at the screen. But we didn&rsquo;t have a fixed World Cam and wanted to control the mouse using raw gaze data, i.e. use the data from your
current gaze at the world (instead at the screen) and move the cursor to the appropriate coordinates on the screen w.r.t that gaze.
So what we did was, we made small changes to the <a href="https://gist.github.com/willpatera/7908319">provided script</a>, removing any reference
to the &lsquo;surface data&rsquo; and utilized the raw <code>norm_gaze</code> data to move the cursor.</p>

<!--more-->


<h1>Required Dependencies:</h1>

<p>You need to have <code>PyMouse</code> and <code>Xlib</code> installed to make the script work. You can install them by running these commands:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo pip install pymouse
</span><span class='line'><span class="nv">$ </span>sudo apt-get install python-xlib
</span></code></pre></td></tr></table></div></figure>


<h1>To Control the Mouse:</h1>

<ol>
<li>Run Pupil</li>
<li>Adjust Focus, Zoom, ROI so that your eye is perfectly tracked</li>
<li>Do the Calibration Process in the World View (We prefer the <code>Natural Features</code> method, since we don&rsquo;t use a fixed World Cam). Make
sure to use lots of points. You can start by pressing <code>c</code> on your keyboard.</li>
<li>Once your gaze is also being perfectly tracked, start the <a href="">TCP Streaming Server</a> by pressing <code>s</code> on your keyboard</li>
<li>Make sure everything&rsquo;s working fine by visiting <a href="http://0.0.0.0:5000">http://0.0.0.0:5000</a> in your browser.</li>
<li>Now, in a new terminal, run the script: <code>$ python mouse_control.py</code></li>
</ol>


<h1>The Script (<a href="https://gist.github.com/sheharyarn/9754664">mouse_control.py</a>):</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">zmq</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">pymouse</span> <span class="kn">import</span> <span class="n">PyMouse</span>
</span><span class='line'>
</span><span class='line'><span class="c">#mouse setup</span>
</span><span class='line'><span class="n">m</span> <span class="o">=</span> <span class="n">PyMouse</span><span class="p">()</span>
</span><span class='line'><span class="n">x_dim</span><span class="p">,</span> <span class="n">y_dim</span> <span class="o">=</span> <span class="n">m</span><span class="o">.</span><span class="n">screen_size</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c">#network setup</span>
</span><span class='line'><span class="n">context</span> <span class="o">=</span> <span class="n">zmq</span><span class="o">.</span><span class="n">Context</span><span class="p">()</span>
</span><span class='line'><span class="n">socket</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">zmq</span><span class="o">.</span><span class="n">SUB</span><span class="p">)</span>
</span><span class='line'><span class="n">socket</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="s">&quot;tcp://127.0.0.1:5000&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c">#filter by messages by stating string &#39;STRING&#39;. &#39;&#39; receives all messages</span>
</span><span class='line'><span class="n">socket</span><span class="o">.</span><span class="n">setsockopt</span><span class="p">(</span><span class="n">zmq</span><span class="o">.</span><span class="n">SUBSCRIBE</span><span class="p">,</span> <span class="s">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">smooth_x</span><span class="p">,</span> <span class="n">smooth_y</span><span class="o">=</span> <span class="mf">0.5</span><span class="p">,</span> <span class="mf">0.5</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>    <span class="n">msg</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">recv</span><span class="p">()</span>
</span><span class='line'>    <span class="n">items</span> <span class="o">=</span> <span class="n">msg</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">msg_type</span> <span class="o">=</span> <span class="n">items</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">items</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">([</span><span class="n">i</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;:&#39;</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">items</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="p">])</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">msg_type</span> <span class="o">==</span> <span class="s">&#39;Pupil&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="k">try</span><span class="p">:</span>
</span><span class='line'>            <span class="n">my_gaze</span> <span class="o">=</span> <span class="n">items</span><span class="p">[</span><span class="s">&#39;norm_gaze&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="n">my_gaze</span> <span class="o">!=</span> <span class="s">&quot;None&quot;</span><span class="p">:</span>
</span><span class='line'>                <span class="n">raw_x</span><span class="p">,</span><span class="n">raw_y</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">float</span><span class="p">,</span><span class="n">my_gaze</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;,&#39;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>                <span class="c"># smoothing out the gaze so the mouse has smoother movement</span>
</span><span class='line'>                <span class="n">smooth_x</span> <span class="o">+=</span> <span class="mf">0.5</span> <span class="o">*</span> <span class="p">(</span><span class="n">raw_x</span><span class="o">-</span><span class="n">smooth_x</span><span class="p">)</span>
</span><span class='line'>                <span class="n">smooth_y</span> <span class="o">+=</span> <span class="mf">0.5</span> <span class="o">*</span> <span class="p">(</span><span class="n">raw_y</span><span class="o">-</span><span class="n">smooth_y</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">x</span> <span class="o">=</span> <span class="n">smooth_x</span>
</span><span class='line'>                <span class="n">y</span> <span class="o">=</span> <span class="n">smooth_y</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">y</span> <span class="o">=</span> <span class="mi">1</span><span class="o">-</span><span class="n">y</span> <span class="c"># inverting y so it shows up correctly on screen</span>
</span><span class='line'>                <span class="n">x</span> <span class="o">*=</span> <span class="n">x_dim</span>
</span><span class='line'>                <span class="n">y</span> <span class="o">*=</span> <span class="n">y_dim</span>
</span><span class='line'>                <span class="c"># PyMouse or MacOS bugfix - can not go to extreme corners</span>
</span><span class='line'>                <span class="c"># because of hot corners?</span>
</span><span class='line'>                <span class="n">x</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">x_dim</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span> <span class="nb">max</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="n">x</span><span class="p">))</span>
</span><span class='line'>                <span class="n">y</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">y_dim</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span> <span class="nb">max</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="n">y</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">m</span><span class="o">.</span><span class="n">move</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span>
</span><span class='line'>        <span class="k">except</span> <span class="ne">KeyError</span><span class="p">:</span>
</span><span class='line'>            <span class="k">pass</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="c"># process non gaze position events from plugins here</span>
</span><span class='line'>        <span class="k">pass</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[#KholoBC - All the Rage Over Youtube]]></title>
    <link href="https://sheharyar.me/blog/kholo-bc-all-the-rage-over-youtube/"/>
    <updated>2014-03-06T02:51:17+05:00</updated>
    <id>https://sheharyar.me/blog/kholo-bc-all-the-rage-over-youtube</id>
    <content type="html"><![CDATA[<p>If you live in Pakistan, you know how common Internet Censorship is here (and to some extent, I&rsquo;m okay with that &ndash; &lsquo;Porn Sites&rsquo;) but
banning YouTube? Seriously guys. And it&rsquo;s been quite a while since it was blocked. The real reason it was blocked was because of a
blasphemous video called &lt;Don&rsquo;t Even Remember the Name> being posted somewhere on it. Pakistanis, or should I say Muslims, take that
very seriously. But the Pakistani Government didn&rsquo;t do what the rest of the Muslim world did, that is blocked the video, instead they
simply blocked all of Youtube. Pakistanis have been using Spotflux, HideMyAss, Hotspot Shield and God-Knows-What other Proxy programs
to get access to Youtube; We <strong><em>are</em></strong> a little frustrated (Well, not me &ndash; I&rsquo;ve been using Tor long before for everything).</p>

<!--more-->




<iframe src="https://sheharyar.me//player.vimeo.com/video/87489847" width="750" height="422" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>


<p>But last week that video was finally taken down, but the Pakistani Government still refuses to lift the ban on  Youtube. To fight the evil
Pakistani Government Dragon, rose the Rapping Warrior, Ali Gul Pir, with the mighty sword of #KholoBC. He released his video &ldquo;Kholo
Ban Chor&rdquo; on Youtube and Vimeo and within days gained tens of thousands of views despite censorship. This video has inspired somewhat of
a &ldquo;Youtube Unblocking Revolution&rdquo; causing thousands of Internet Users from Pakistan to start using the #KholoBC Hashtag on Social Media
Websites to demand the lift on the ban.</p>

<p><a href="http://blogs.tribune.com.pk/story/21198/kholo-bc-and-eight-other-reasons-to-lift-the-ban-on-youtube-now/">The Tribune</a> points out:</p>

<blockquote><p>The ban has never been about protecting the honour of Prophet Muhammad (pbuh),
come to think about it. Its real purpose seems to be a calculated halt,
so that the activities of our unscrupulous leaders are not exposed.</p></blockquote>

<p>and that seems to be the very point of the video.</p>

<h2>NOTE:</h2>

<p>I want to clarify that I have high regards for the Holy Prophet Muhammad (pbuh) and I, like millions of other Muslims, cannot bear any
blasphemous act in his honour. But shutting down the entire website seems inappropriate since it&rsquo;s a source of education as well and
has helped so many people learn something new. The right way is simply to block the specific pages, like the rest of the world is doing.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing TSocks (TorSocks) on MacOSX]]></title>
    <link href="https://sheharyar.me/blog/installing-tsocks-on-macosx/"/>
    <updated>2014-03-03T20:28:26+05:00</updated>
    <id>https://sheharyar.me/blog/installing-tsocks-on-macosx</id>
    <content type="html"><![CDATA[<p>I recently came across this nifty little terminal app called <a href="https://whatbox.ca/wiki/tsocks">TSocks</a> that allows you to use a Socks Proxy
for your terminal commands. I already use <a href="http://torproject.org/">Tor</a> for all other web communications on my Macbook Air, so I wanted to
be able to use Tor for my terminal commands as well. You can download and install it via <a href="http://sonnykt.tumblr.com/post/1256048245/using-terminal-commands-with-socks-proxy">MacPorts</a> or
<a href="https://github.com/Homebrew/homebrew/issues/11870#issuecomment-12080107">Homebrew</a> or you can build it manually. Sadly, the TSocks Project
is no longer maintained. So I set out to find a recent fork or a modified version that would work, and after 10 minutes into my quest I found
<a href="http://code.google.com/p/torsocks/">TorSocks</a>. It was a customized version of TSocks, specfically built to work with Tor out of the box and since
Tor was the real reason I wanted to use TSocks in the first place, this was perfect for me. I didn&rsquo;t need to customize anything, I just
installed it and started using it.</p>

<!--more-->


<h2>Installation</h2>

<p>You can install TorSocks via <a href="http://superuser.com/a/641732/214953">MacPorts</a> but I personally like to use <a href="http://brew.sh">Homebrew</a>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew install tor            # required depencency
</span><span class='line'>$ brew install torsocks
</span><span class='line'>$ brew install wget</span></code></pre></td></tr></table></div></figure>


<h2>Usage</h2>

<p>Usage is fairly simple. First start Tor using the commandline or the Vidalia GUI, then use <code>torsocks</code>, <code>usewithtor</code> or <code>torify</code> commands to
execute any other command that connects to the internet. One thing that pisses me off is that the <code>ping</code> command doesn&rsquo;t work with it.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ torify wget google.com
</span><span class='line'>$ torsocks wget google.com
</span><span class='line'>$ usewithtor wget google.com</span></code></pre></td></tr></table></div></figure>


<p>You&rsquo;ll see that the file will be downloaded. Not Satisfied? You can check your IP using the following commands:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl icanhazip.com               # Your Original IP
</span><span class='line'>$ torsocks curl icanhazip.com      # Your IP over Tor</span></code></pre></td></tr></table></div></figure>


<p>Happy (Anonymous) Surfing!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How Not to Be a Pakistani]]></title>
    <link href="https://sheharyar.me/blog/how-not-to-be-a-pakistani/"/>
    <updated>2014-02-08T18:15:27+05:00</updated>
    <id>https://sheharyar.me/blog/how-not-to-be-a-pakistani</id>
    <content type="html"><![CDATA[<p>I came across this blog today, called <a href="http://ogchronic.wordpress.com/">How not to be a Pakistani</a>, and I can&rsquo;t believe how perfectly the author describes some of the things of our Pakistani Culture.</p>

<p>A few posts that gave me a good laugh (and made me think) were <a href="http://ogchronic.wordpress.com/2014/01/28/how-to-be-a-social-cheetah/">How to be a Social Cheetah</a> and <a href="http://ogchronic.wordpress.com/2013/07/31/how-to-be-an-average-pakistani-chawal/">How to be an average Pakistani &lsquo;Chawal&rsquo;</a>, especially the second one. It made me doubt myself a little. This is <strong>exactly</strong> how things are here and I don&rsquo;t want to be a part of it.</p>

<p>I won&rsquo;t go into any more details, but you should definitely check the blog out!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LibIlmImf.so.6 Missing From OpenCV Project]]></title>
    <link href="https://sheharyar.me/blog/libilmimf-so-6-missing-from-opencv-project/"/>
    <updated>2014-02-05T11:18:01+05:00</updated>
    <id>https://sheharyar.me/blog/libilmimf-so-6-missing-from-opencv-project</id>
    <content type="html"><![CDATA[<p>Last time <a href="http://sheharyar.me/blog/ubuntu-13-10-parallels-monitor-configuration-crtc-80/">I mentioned</a> that I was working on a new Hobby Project, <a href="http://pupil-labs.com/pupil/">Pupil</a>. This was my first time working with Python and OpenCV for that matter.</p>

<p>This project was already getting on my nerves. So many errors, before I even had the chance to touch the code. One error that was driving me nuts was:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ python main.py
</span><span class='line'>Traceback (most recent call last):
</span><span class='line'>  File "main.py", line 79, in &lt;module&gt;
</span><span class='line'>    from eye import eye
</span><span class='line'>  File "/home/psycho/pupil-shit/pupil/pupil_src/capture/eye.py", line 20, in &lt;module&gt;
</span><span class='line'>    from methods import *
</span><span class='line'>  File "/home/psycho/pupil-shit/pupil/pupil_src/shared_modules/methods.py", line 16, in &lt;module&gt;
</span><span class='line'>    import cv2
</span><span class='line'>ImportError: libIlmImf.so.6: cannot open shared object file: No such file or directory</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>I googled high and low, looked at the <a href="https://groups.google.com/forum/#!forum/pupil-discuss">Pupil Google Group</a>, opened up <a href="https://github.com/pupil-labs/pupil/issues/4">Github Issues</a>. I was the only one getting this error, but why? I had followed the <a href="https://github.com/pupil-labs/pupil/wiki/Dependencies-Installation-Linux">Installation Guide</a> closely, and on three different clean installations of Ubuntu. This was really frustrating.</p>

<p>In the end, it was a friend on Facebook who told me to try working after installing <code>openexr</code>. I did, and problem solved. <code>libIlmImf.so.6</code> is a package bundled with it.</p>

<p>Anyways, you can do this to make the error go away:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install openexr</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 13.10 in Parallels - CRTC 80 Error]]></title>
    <link href="https://sheharyar.me/blog/ubuntu-13-10-parallels-monitor-configuration-crtc-80/"/>
    <updated>2014-02-02T16:01:16+05:00</updated>
    <id>https://sheharyar.me/blog/ubuntu-13-10-parallels-monitor-configuration-crtc-80</id>
    <content type="html"><![CDATA[<p>Last night I spent hours configuring Ubuntu and Installing Dependencies, programs and God-knows-what for a new Hobby Project of mine, <a href="http://pupil-labs.com/pupil/">Pupil</a>.</p>

<p>It was a clean installation of Ubuntu 13.10 in Parallels 9 on my new Macbook. I had invested too much time installing pupil, only to find that the display drivers or GTK or something had been corrupted. This was the second time I was booting ubuntu and had been slapped in the face by this:</p>

<!--more-->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Could not switch the Monitor Configuration
</span><span class='line'>could not set the configuration for CRTC 80</span></code></pre></td></tr></table></div></figure>


<p>I restarted it, but received the same error. The login screen was perfect, mind you; The error presented it self only after logging in. There was nothing else; No Icons, no Menu bar, no Unity. I googled for hours and tried everything I could; <a href="http://ubuntuforums.org/showthread.php?t=1835391">Using xrandr</a>, <a href="http://kb.parallels.com/en/114097">Editing xorg.conf</a>, <a href="http://www.parallels.com/support/desktop/troubleshooter-en_US">Running Parallels Troubleshooter</a> and so much more. In the end, I was somewhat able to restore my installation by reinstalling my Parallels Desktop Tools.</p>

<p>These are the exact steps I followed after logging in:</p>

<ol>
<li>Press <code>Control + Alt + F1</code></li>
<li>In the full-screen terminal, login with your credentials</li>
<li>In the Parallels Desktop Menu, select <em>Devices > CD/DVD 1 > Connect Image</em></li>
<li>In the new Finder dialog, browse to <em>Applications > Parallels Desktop > Contents > Resources > Tools > pri-tools-lin.iso</em></li>
<li>Now back in your terminal screen, type the following commands:</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mkdir /media/cdrom
</span><span class='line'>sudo mount /dev/sr0 /media/cdrom
</span><span class='line'><span class="nb">cd</span> /media/cdrom
</span><span class='line'>sudo ./install
</span></code></pre></td></tr></table></div></figure>


<p>Parallels Tools&#8217; installation will begin. Go through the steps and complete the installation. After that, reboot using: <code>$ sudo reboot</code></p>

<p>If everything went fine, you would at least be able to see your desktop. In my case, there was no Unity Sidebar or the top Menu Bar; But it&rsquo;s still something. Maybe installing Gnome would help.</p>

<p><strong>Lesson:</strong> Make regular <em>Snapshots</em> of your OSes in Parallels</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Opening Files From Finder Using Keyboard]]></title>
    <link href="https://sheharyar.me/blog/macosx-opening-files-from-finder-using-keyboard/"/>
    <updated>2014-02-02T10:05:00+05:00</updated>
    <id>https://sheharyar.me/blog/macosx-opening-files-from-finder-using-keyboard</id>
    <content type="html"><![CDATA[<p>I&rsquo;m a recent Mac convert so it was really weird for me when I realized that hitting the Return key in Finder renames the file instead of opening it. I&rsquo;ve spent the better part of my life using Windows and Linux and as you can imagine this was really frustrating for me (and still is).</p>

<p>After a bit of Googling, I found out that you can open selected files in Finder using the <code>⌘ + O</code> combination on your keyboard. I&rsquo;m still trying to find a way to modify this to the &lsquo;Return&rsquo; key to have a consistent <em>Keyboard experience</em> on all my PCs.</p>

<p>Anyways, digging my new Macbook Air. :D</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Yet Another Octopress Blog]]></title>
    <link href="https://sheharyar.me/blog/yet-another-octopress-blog/"/>
    <updated>2014-01-28T03:13:21+05:00</updated>
    <id>https://sheharyar.me/blog/yet-another-octopress-blog</id>
    <content type="html"><![CDATA[<p>No. This isn&rsquo;t another rant by a new Rubyist about how Ruby is so beautiful, open and awesome &amp; how <a href="http://octopress.org">Octopress</a> has liberated yet another slave of <a href="http://wordpress.org">Wordpress</a>. I love Ruby, Rails, Octopress and other <em>Hip</em> Geeky things; but I love Wordpress too. Moving to Octopress is something I have been wanting to do for a long time. I wanted to have complete control over my writings. I wanted them to be as minimal as possible, both in terms of design and code.</p>

<p><strong>Let me stop you right there.</strong> Octopress is not for you. You&rsquo;ll have to write in Markdown, there&rsquo;s zero community support compared to wordpress, you have to write and deploy from possibly only one system and you&rsquo;ll have to get your hands dirty. Real Dirty. Getting hard? Well, I am. My condition is something like <a href="http://billpatrianakos.me/blog/2012/10/31/the-making-of-an-octopress-theme/">Bill Patrianakos</a> tells it:</p>

<blockquote><p>There’s something about static files, Markdown, Git repos, the terminal, and a text editor that turns me on.</p></blockquote>

<p>Octopress is really cool. This might be my first public post on the platform, but I&rsquo;ve been experimenting with Octopress for months on my local system. The Sass, the Liquid Engine and other fine grains of the platform made me fall in love. But the theme &ndash; It was overly complicated and too much used on the web. I wanted it to be a little different and hence I decided to launch an Octopress Blog only when I have made my own Octopress theme.</p>

<p>Thus born was <code>Sybtle</code>, an Octopress theme created from scratch and inspired by the <a href="https://svbtle.com">Svbtle</a> online writing platform. I might release it in the future, but for now if you want to use it, you&rsquo;ll have to go through the <a href="https://github.com/sheharyarn/sheharyarn.github.io">code</a> yourself and clean it up.</p>

<p>That&rsquo;s enough rant for today.</p>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Find | Sheharyar Naseer]]></title>
  <link href="https://sheharyar.me/blog/categories/find/atom.xml" rel="self"/>
  <link href="https://sheharyar.me/"/>
  <updated>2017-04-08T00:21:45-04:00</updated>
  <id>https://sheharyar.me/</id>
  <author>
    <name><![CDATA[Sheharyar Naseer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Quickly Search for Files in Unix Terminal]]></title>
    <link href="https://sheharyar.me/blog/quickly-search-for-files-in-unix-terminal/"/>
    <updated>2015-01-29T19:38:42-05:00</updated>
    <id>https://sheharyar.me/blog/quickly-search-for-files-in-unix-terminal</id>
    <content type="html"><![CDATA[<p><code>find</code> is a powerful command-line utility but most of the time I just really need to search for matching files
and directories in the current directory. I also usually end up <code>grep</code>-ing the output and using wildcards around
the argument.</p>

<p>So why not just simplify the whole thing?</p>

<!-- more -->


<p>Creating a simple function that does that for us would be the way to go, so this should do the job:</p>

<p>```bash
search() {</p>

<pre><code>find . -iname "*$1*" -d | sed 's/^..//' | grep -i --color "$1"
</code></pre>

<p>}
```</p>

<p>Let me explain what this does. <code>find</code> does a case-insensitive <code>-iname</code> search in the current directory <code>.</code> of all the files
and folders matching the provided string <code>"*$1*"</code> and also looks in sub-directories <code>-d</code>. Then <code>sed</code> deletes the first
two characters of each line (they are <code>./</code>) to clean up the results. <code>grep -i</code> is then used to highlight the string in the results.</p>

<p>You can use it like this:</p>

<p><code>bash
$ search vim
Vim/.vimrc
Vim/vundles.vim
Vim
</code></p>

<p>You can now add this function to your <code>.bash_profile</code> or better yet, your <a href="https://github.com/sheharyarn/dotfiles/blob/master/Zsh/functions.sh#L15-L27">.dotfiles</a> so it always gets loaded in to your shell session. I&rsquo;ve modified this function a bit more to accept multiple arguments:</p>

<p>```bash
search() {</p>

<pre><code>if [[ $# -eq 0 ]] ; then
    echo "no arguments provided"
    echo "usage: search string [string2 string3 ...]"
    echo ""
else
    for i in "$@"; do
        find . -iname "*$i*" -d | sed 's/^..//' | grep -i --color "$i"
        echo ""
    done
fi
</code></pre>

<p>}
```</p>

<p>Now go! Be Free!</p>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | Sheharyar Naseer]]></title>
  <link href="https://sheharyar.me/blog/categories/rails/atom.xml" rel="self"/>
  <link href="https://sheharyar.me/"/>
  <updated>2016-05-23T00:56:40+05:00</updated>
  <id>https://sheharyar.me/</id>
  <author>
    <name><![CDATA[Sheharyar Naseer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Talk: Introduction to Elixir]]></title>
    <link href="https://sheharyar.me/blog/talk-introduction-to-elixir/"/>
    <updated>2016-03-02T20:45:28+05:00</updated>
    <id>https://sheharyar.me/blog/talk-introduction-to-elixir</id>
    <content type="html"><![CDATA[<p>For the past 8+ months, I&rsquo;ve been tinkering with the <a href="http://elixir-lang.org/">Elixir Programming Language</a>
and the <a href="http://www.phoenixframework.org/">Phoenix Framework</a>. This was my first experience with a &ldquo;real&rdquo; functional
language and I learned a lot about the paradigm and the ecosystem.</p>

<p>Last week, I had a chance to share my thoughts and experiences with other developers
at the <a href="http://isloojs.com/">Islamabad.js</a> meetup. You can check out the slides below:</p>

<!-- more -->




<div class='video-container'>
<div class='video-embed' style='width: 700px'>
  <script async class="speakerdeck-embed" data-id="25fe787fe84544f0a3278d6af78fae3e" data-ratio="1.77777777777778" src="https://sheharyar.me//speakerdeck.com/assets/embed.js"></script>
</div>
</div>


<p>I still don&rsquo;t consider myself a great elixir developer, much less an expert and still
have a long way to go, but Saša Jurić&rsquo;s <a href="https://www.manning.com/books/elixir-in-action">Elixir in Action</a> and Josh Adam&rsquo;s
<a href="http://elixirsips.com/">ElixirSips</a> were extremely helpful resources to get me here. Do check them out!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Google Analytics in Rails 4 With Turbolinks]]></title>
    <link href="https://sheharyar.me/blog/using-google-analytics-in-rails-4-with-turbolinks/"/>
    <updated>2015-03-29T22:24:54+05:00</updated>
    <id>https://sheharyar.me/blog/using-google-analytics-in-rails-4-with-turbolinks</id>
    <content type="html"><![CDATA[<p>There doesn&rsquo;t seem to be a proper way of using Google Analytics in a Rails 4 app when Turbolinks are involved.
So I&rsquo;m just writing here what works for me. I&rsquo;ve written this for the new
<a href="https://support.google.com/analytics/answer/2817075">Google Universal Analytics</a>, and this guide uses the
<a href="https://github.com/slim-template/slim/">Slim Templating Language</a> but you can just as easily use it with <code>erb</code> or <code>haml</code>.</p>

<!-- more -->


<p>Create a <code>_google_analytics.html.slim</code> file in your <code>app/views/layouts</code> folder, and paste in the script you got from
the <a href="http://google.com/analytics">Google Analytics</a> website as is:</p>

<p>```slim
&ndash; if Rails.env.production?</p>

<pre><code>javascript:
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-XXXXXXXX-X', 'auto');
    ga('send', 'pageview');
</code></pre>

<p>```</p>

<p>Now, create a <code>google_analytics.coffee</code> file in your <code>app/assets/javascripts</code> directory, and paste in this:</p>

<p>```coffee
jQuery &ndash;>
  $(document).on &lsquo;page:change&rsquo;, &ndash;></p>

<pre><code>if window.ga?
  ga('set',  'location', location.href.split('#')[0])
  ga('send', 'pageview', { "title": document.title })
</code></pre>

<p>```</p>

<p>This file will track the page again, whenever turbolinks loads a new page. In your <code>application.html.slim</code>, render the layout right before closing the <code>head</code> tag:</p>

<p>```slim
doctype html
html
  head</p>

<pre><code>title My Rails App

/ Some code...

== stylesheet_link_tag 'application', params[:controller], media: 'all'
== render 'layouts/google_analytics'
</code></pre>

<p>  body</p>

<pre><code>/ Some more code...
</code></pre>

<p>```</p>

<p>Finally, in your <code>application.js</code>, require the <code>coffee</code> file we previously created:</p>

<p>```javascript
//= require jquery
//= require jquery_ujs
//= require google_analytics</p>

<p>var someJavascriptStuff = {};
```</p>

<p>Now, you&rsquo;re good to go.</p>
]]></content>
  </entry>
  
</feed>
